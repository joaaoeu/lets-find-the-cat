{"version":3,"sources":["configs/reactotron.js","store/ducks/index.js","store/sagas/index.js","store/index.js","styles/colors.js","styles/global.js","components/Header/styles.js","components/Header/index.js","components/Footer/styles.js","components/Footer/index.js","pages/Main/styles.js","pages/Main/index.js","pages/NotFound/styles.js","pages/NotFound/index.js","routes.js","App.js","index.js"],"names":["reactotron","combineReducers","rootSaga","middlewares","sagaMiddleware","createSagaMiddleware","sagaMonitor","push","composer","compose","applyMiddleware","store","createStore","reducers","run","sagas","colors","white","black","grey","darkGrey","background","GlobalStyle","createGlobalStyle","Container","styled","div","Header","Footer","Main","NotFound","href","Routes","exact","path","component","dotenv","config","App","ReactDOM","render","document","getElementById"],"mappings":"4QAkBeA,IChBAC,cAAgB,I,4BCFNC,GAAV,SAAUA,IAAV,gEACb,YADa,gDCOf,IAAMC,EAAc,GAIdC,EAAiBC,YAAqB,CAAEC,YAFgB,OAI9DH,EAAYI,KAAKH,GAEjB,IAAMI,EAKFC,YAAQC,IAAe,WAAf,EAAmBP,IAEzBQ,EAAQC,YAAYC,EAAUL,GAEpCJ,EAAeU,IAAIC,GAEJJ,Q,+BCfAK,EAXA,CAEbC,MAAO,OACPC,MAAO,OACPC,KAAM,UACNC,SAAU,UAGVC,WAAY,W,8UCLd,IAeeC,EAfKC,YAAH,IAQCP,EAAOK,Y,yMCRlB,IAAMG,EAAYC,IAAOC,IAAV,IAKXV,EAAOE,OCCHS,EANA,kBACb,kBAACH,EAAD,KACE,qD,yMCFG,IAAMA,EAAYC,IAAOC,IAAV,IAKXV,EAAOE,OCCHU,EANA,kBACb,kBAAC,EAAD,c,uLCDK,IAAMJ,EAAYC,IAAOC,IAAV,IAKXV,EAAOE,OCMHW,EAVF,kBACX,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,qCAEF,kBAAC,EAAD,Q,2OCPG,IAAML,EAAYC,IAAOC,IAAV,IAKXV,EAAOE,MAILF,EAAOI,UCDLU,EARE,kBACf,kBAAC,EAAD,KACE,mDACA,wDACA,uBAAGC,KAAK,uBAAR,4BCMWC,EATA,kBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,sBAAsBC,UAAWN,IACnD,kBAAC,IAAD,CAAOK,KAAK,IAAIC,UAAWL,OCDjCM,IAAOC,SAEP,IASeC,EATH,kBACV,kBAAC,IAAD,CAAU3B,MAAOA,GACf,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,SCTN4B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3a8623b7.chunk.js","sourcesContent":["import Reactotron from 'reactotron-react-js';\nimport { reactotronRedux } from 'reactotron-redux';\nimport sagaPlugin from 'reactotron-redux-saga';\nimport { IS_DEV } from '.';\n\nconst reactotron = IS_DEV\n  ? Reactotron\n    .configure({\n      name: \"Let's find the cat!\",\n      host: window.location.hostname,\n    })\n    .use(reactotronRedux())\n    .use(sagaPlugin())\n    .connect()\n  : null;\n\nif (IS_DEV) reactotron.clear();\n\nexport default reactotron;\n","import { combineReducers } from 'redux';\n\nexport default combineReducers({});\n","export default function* rootSaga() {\n  yield;\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { IS_DEV } from '../configs';\nimport reactotron from '../configs/reactotron';\nimport reducers from './ducks';\nimport sagas from './sagas';\n\nconst middlewares = [];\n\nconst sagaMonitor = IS_DEV ? reactotron.createSagaMonitor() : null;\n\nconst sagaMiddleware = createSagaMiddleware({ sagaMonitor });\n\nmiddlewares.push(sagaMiddleware);\n\nconst composer = IS_DEV\n  ? compose(\n    applyMiddleware(...middlewares),\n    reactotron.createEnhancer(),\n  )\n  : compose(applyMiddleware(...middlewares));\n\nconst store = createStore(reducers, composer);\n\nsagaMiddleware.run(sagas);\n\nexport default store;\n","const colors = {\n  // Colors\n  white: '#FFF',\n  black: '#000',\n  grey: '#d3d3d3',\n  darkGrey: '#808080',\n\n  // General\n  background: '#e9ebee',\n};\n\nexport default colors;\n","import { createGlobalStyle } from 'styled-components';\nimport colors from './colors';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: 0;\n  }\n  body {\n    background: ${colors.background};\n    text-rendering: optimizeLegibility !important;\n    -webkit-font-smoothing: antialiased !important;\n    font-family: sans-serif;\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\nimport { colors } from '../../styles';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  color: ${colors.black};\n  padding: 20px;\n`;\n","import React from 'react';\nimport { Container } from './styles';\n\nconst Header = () => (\n  <Container>\n    <h1>Let&apos;s find the cat!</h1>\n  </Container>\n);\n\nexport default Header;\n","import styled from 'styled-components';\nimport { colors } from '../../styles';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  color: ${colors.black};\n  padding: 20px;\n`;\n","import React from 'react';\nimport { Container } from './styles';\n\nconst Footer = () => (\n  <Container>\n    2019\n  </Container>\n);\n\nexport default Footer;\n","import styled from 'styled-components';\nimport { colors } from '../../styles';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  color: ${colors.black};\n`;\n","import React from 'react';\nimport { Header, Footer } from '../../components';\nimport { Container } from './styles';\n\nconst Main = () => (\n  <>\n    <Header />\n    <Container>\n      <p>Main!</p>\n    </Container>\n    <Footer />\n  </>\n);\n\nexport default Main;\n","import styled from 'styled-components';\nimport { colors } from '../../styles';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  color: ${colors.black};\n  line-height: 1.8;\n\n  a {\n    color: ${colors.darkGrey};\n  }\n`;\n","import React from 'react';\nimport { Container } from './styles';\n\nconst NotFound = () => (\n  <Container>\n    <h1>Let&apos;s find the cat!</h1>\n    <h2>This page doesn&apos;t exist!</h2>\n    <a href=\"/lets-find-the-cat/\">Click here to go home.</a>\n  </Container>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Main, NotFound } from './pages';\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/lets-find-the-cat/\" component={Main} />\n      <Route path=\"*\" component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport dotenv from 'dotenv';\nimport store from './store';\nimport Routes from './routes';\nimport { GlobalStyle } from './styles';\n\ndotenv.config();\n\nconst App = () => (\n  <Provider store={store}>\n    <>\n      <GlobalStyle />\n      <Routes />\n    </>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}